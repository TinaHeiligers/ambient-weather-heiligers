main: starting main function 2022-01-17T17:30:12.123Z
main: STAGE: fetchData

main: stepsStates: {
  fatalError: false,
  fetchNewData: true,
  newDataFetched: false,
  newDataSkipped: false,
  clusterReady: false,
  dataConvertedToJsonl: false,
  backfillDataFromFile: false
}

fetchRawData: [FetchRawData: getDataForDateRanges] args: skipSave, fromDate { skipSave: true, fromDate: 1642440612122 }
fetchRawData: [FetchRawData: getDataForDateRanges] [single-day fetch] Fewer than a 288-batch records required. Setting up request for records count: { estTotalNumRecordsToFetch: 210 }
There are no unconverted files
Converting imperial to metric data
There are no unconverted files
main: imperialDataJSONLFileNames []
main: metricDataJSONLFileNames []
main: STAGE: convertToJsonl

main: stepsStates: {
  fatalError: false,
  fetchNewData: false,
  newDataFetched: true,
  newDataSkipped: false,
  clusterReady: false,
  dataConvertedToJsonl: false,
  backfillDataFromFile: false
}

main: STAGE: getRecentIndexedDocs

main: stepsStates: {
  fatalError: false,
  fetchNewData: false,
  newDataFetched: true,
  newDataSkipped: false,
  clusterReady: false,
  dataConvertedToJsonl: false,
  backfillDataFromFile: false
}

indexer: Cluster ping success! We are live :-)
indexer: [getActiveWriteIndices] [START]
indexer: [getMostRecentIndexedDocuments] [START]

main: STAGE: getRecentIndexedDocs

main: stepsStates: {
  fatalError: false,
  fetchNewData: false,
  newDataFetched: true,
  newDataSkipped: false,
  clusterReady: true,
  dataConvertedToJsonl: false,
  backfillDataFromFile: false
}

main: STAGE: checkNewDataAgainstLastIndexedDoc

main: stepsStates: {
  fatalError: false,
  fetchNewData: false,
  newDataFetched: true,
  newDataSkipped: false,
  clusterReady: true,
  dataConvertedToJsonl: false,
  backfillDataFromFile: false
}

main: STAGE: getExistingDataFromFile

main: stepsStates: {
  fatalError: false,
  fetchNewData: false,
  newDataFetched: true,
  newDataSkipped: false,
  clusterReady: true,
  dataConvertedToJsonl: false,
  backfillDataFromFile: false
}

main: no new files, reading exisiting imperial data from file
main: [prepareDataForBulkIndexing] [fileNamesArray]: []
main: [prepareDataForBulkIndexing] [dataType]: imperial
fileNamesArray is undefined
in readAllData with fullPathToFiles as: data/ambient-weather-heiligers-imperial-jsonl
finished reading the dir, with a result of filesArray: [
  '1641684000000_1641752460000',
  '1641752700000_1641839100000',
  '1641839400000_1641858900000',
  '1641859500000_1641945300000',
  '1641945600000_1642031400000',
  '1642031700000_1642117500000',
  '1642117800000_1642203600000',
  '1642203900000_1642290300000',
  '1642290600000_1642290900000',
  '1642291200000_1642291200000',
  '1642291500000_1642350600000',
  '1642350900000_1642362300000',
  '1642362600000_1642371000000',
  '1642371360000_1642377360000',
  '20211231-T-1900_20211231-T-2125',
  '20211231-T-2130_20220101-T-2120',
  '20220101-T-1815_20220102-T-1805',
  '20220101-T-2125_20220102-T-2115',
  '20220102-T-1810_20220103-T-1811',
  '20220102-T-2120_20220103-T-2120',
  '20220103-T-1815_20220104-T-1805',
  '20220103-T-2125_20220104-T-2115',
  '20220104-T-1810_20220105-T-1800',
  '20220104-T-2120_20220105-T-2110',
  '20220105-T-1805_20220106-T-1756',
  '20220105-T-2115_20220106-T-2105',
  '20220106-T-2110_20220107-T-2100',
  '20220107-T-2105_20220108-T-2100',
  '20220108-T-2105_20220108-T-2315',
  '20220108-T-2320_20220109-T-0050',
  '20220109-T-0055_20220109-T-0100'
]
fileNamesArray: [
  '1641684000000_1641752460000',
  '1641752700000_1641839100000',
  '1641839400000_1641858900000',
  '1641859500000_1641945300000',
  '1641945600000_1642031400000',
  '1642031700000_1642117500000',
  '1642117800000_1642203600000',
  '1642203900000_1642290300000',
  '1642290600000_1642290900000',
  '1642291200000_1642291200000',
  '1642291500000_1642350600000',
  '1642350900000_1642362300000',
  '1642362600000_1642371000000',
  '1642371360000_1642377360000',
  '20211231-T-1900_20211231-T-2125',
  '20211231-T-2130_20220101-T-2120',
  '20220101-T-1815_20220102-T-1805',
  '20220101-T-2125_20220102-T-2115',
  '20220102-T-1810_20220103-T-1811',
  '20220102-T-2120_20220103-T-2120',
  '20220103-T-1815_20220104-T-1805',
  '20220103-T-2125_20220104-T-2115',
  '20220104-T-1810_20220105-T-1800',
  '20220104-T-2120_20220105-T-2110',
  '20220105-T-1805_20220106-T-1756',
  '20220105-T-2115_20220106-T-2105',
  '20220106-T-2110_20220107-T-2100',
  '20220107-T-2105_20220108-T-2100',
  '20220108-T-2105_20220108-T-2315',
  '20220108-T-2320_20220109-T-0050',
  '20220109-T-0055_20220109-T-0100'
]
